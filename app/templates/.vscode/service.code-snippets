{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $1 for tab stops, $2 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "typescript",
		"prefix": "service",
		"body": [
			"import Promise from 'bluebird';",
			"import L from '../../common/logger';",
			"import $2, {I$2Model} from '../../models/$1';",

			"export class $2Service {",
			"  all() : Promise<I$2Model[]> {",
			"    return $2.find({});",
			"  }",

			"  byId(_id: String): Promise<I$2Model> {",
			"    return $2.findById(_id);",
			"  }",

			"  create($3): Promise<I$2Model> {",
			"    return new $2({$3}).save();",
			"  }",

			"  update(_id: String, $1: I$2Model): Promise<I$2Model> {",
			"    return $2.findOneAndUpdate({_id}, $1, {new: true});",
			"  }",

			"  delete(_id: String): Promise<String> {",
			"    return $2.deleteOne({_id});",
			"  }",
			"}",

			"export default new $2Service();",
		],
		"description": "Log output to console"
	}
}