{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "typescript",
		"prefix": "model",
		"body": [
			"import * as connections from '../config/connection';",
			"import { Schema, Document, Types } from 'mongoose';",
			"",
			"/**",
			"* @export",
			"* @interface I$1Model",
			"* @extends {Document}",
			"*/",
			"export interface I$1Model extends Document {",
			" _id: Types.ObjectId;",
			" createdAt ? : Date;",
			" updatedAt ? : Date;",
			"}",
			"",
			"const $2Schema = new Schema({",
			"  $0",
			"},",
			"{",
			"  timestamps: true,",
			"  collection: '$2'",
			"});",
			"",
			"export default connections.db.model< I$1Model >('$1', $2Schema);"
		],
		"description": "Create mongoose model"
	}
}